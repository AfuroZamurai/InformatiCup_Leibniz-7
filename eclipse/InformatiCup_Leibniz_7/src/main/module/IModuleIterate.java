package main.module;

import java.awt.image.BufferedImage;
import java.util.List;

import main.evaluate.EvaluationResult;
import main.evaluate.IClassification;

/**
 * This interface describes a module that generates new images given an initial
 * image to start with. It will iteratively generate these images trying to
 * maximize the evaluation result.
 * 
 * @author Fredo
 *
 */
public interface IModuleIterate {

	/**
	 * The module generates the next image, which is then evaluated and the result
	 * is given back to the module.
	 * 
	 * @return The next image that is generated by the module
	 */
	public BufferedImage generateNextImage();

	/**
	 * Gives the EvaluationResult of the last generated image back to the module.
	 * 
	 * @param result
	 *            The EvaluationResult of the last generated image
	 */
	public void setEvalResult(EvaluationResult<IClassification> result);

	/**
	 * Sets up the module by giving an initial Image and its corresponding Sign.
	 * 
	 * @param img
	 *            The initial image
	 * @param sign
	 *            The Sign of the initial image
	 */
	public void setInitImage(BufferedImage img, IClassification imageClass);
	
	/**
	 * Returns a list of Parameters that are used by the module.
	 * 
	 * @return A list of used Parameters
	 */
	public List<Parameter> getParameterList();
	
	/**
	 * Returns whether the module is finished.
	 * 
	 * @return A boolean indicating whether the module is finished.
	 */
	public boolean isFinished();
}
